{"version":3,"file":"index.umd.js","sources":["../src/utils.ts","../src/axis.ts","../src/label.ts","../src/labels.ts","../src/graduations.ts","../src/axes.ts"],"sourcesContent":["export function floorRelative(\n  value: number,\n  decimals: number | undefined = 0\n): number {\n  if (decimals === undefined) return value\n  const factor = Math.pow(10, decimals)\n  return value > 0\n    ? Math.floor(value * factor) / factor\n    : Math.ceil(value * factor) / factor\n}\n\nexport function ceilRelative(\n  value: number,\n  decimals: number | undefined = 0\n): number {\n  return -floorRelative(-value, decimals)\n}\n\nexport function roundStep(\n  value: number,\n  decimals: number,\n  divider: number,\n  direction: 1 | -1 = 1\n): number {\n  const step = 1 / Math.pow(divider, decimals)\n  let roundedValue: number\n\n  if (direction > 0) {\n    roundedValue = Math.floor(value)\n    while (roundedValue < value) roundedValue += step\n  } else {\n    roundedValue = Math.ceil(value)\n    while (roundedValue > value) roundedValue -= step\n  }\n\n  return roundedValue\n}\n\nexport function smallerDividerOf(value: number, maximum: number = 10): number {\n  for (var divider = 2; divider < maximum; divider++) {\n    if (!(value % divider)) return divider\n  }\n\n  return 0\n}\n","import { Vector2 } from 'three'\n\nimport {\n  floorRelative,\n  ceilRelative,\n  roundStep,\n  smallerDividerOf\n} from '~/utils'\n\nexport interface AxisParameters {\n  size: number\n  labels: (number | string)[]\n  decimals?: number\n  prefix: string\n  suffix: string\n  graduations: number\n  root: boolean\n  relative: boolean\n  lineWidth: number\n  progress: number\n  margin: number\n  padding: number\n  distance: number\n}\n\nexport interface AxisGenerateParameters {\n  labels: number\n  decimals: number\n  labelsBasedDecimals: boolean\n  root: boolean\n  relative: boolean\n  minimumOffset: number\n  maximumOffset: number\n}\n\nexport class Axis implements AxisParameters {\n  private _relative!: boolean\n  private _labels!: (number | string)[]\n  public orientation: Vector2\n  public spacing: Vector2\n  public size: number\n  public decimals?: number\n  public prefix: string\n  public suffix: string\n  public graduations: number\n  public root: boolean\n  public lineWidth: number\n  public progress: number\n  public margin: number\n  public padding: number\n  public distance: number\n  public rootPosition!: number\n\n  public constructor({\n    orientation,\n    spacing,\n    size = 10,\n    labels = [],\n    prefix = '',\n    suffix = '',\n    decimals = undefined,\n    graduations = 1,\n    root = false,\n    relative = false,\n    lineWidth = 0.02,\n    progress = 1,\n    margin = 0.2,\n    padding = 0,\n    distance = 0\n  }: Partial<AxisParameters> & {\n    orientation: Vector2\n    spacing: Vector2\n  }) {\n    this.orientation = orientation\n    this.spacing = spacing\n    this.size = size\n    this._labels = labels\n    this.prefix = prefix\n    this.suffix = suffix\n    this.decimals = decimals\n    this.graduations = graduations\n    this.root = root\n    this.relative = relative\n    this.lineWidth = lineWidth\n    this.progress = progress\n    this.margin = margin\n    this.padding = padding\n    this.distance = distance\n  }\n\n  private updateRootPosition(): void {\n    if (!this.relative) {\n      this.rootPosition = 0\n    } else if (!this.labels.length) {\n      this.rootPosition = 0.5\n    } else {\n      const index = this.labels.findIndex(label => (\n        parseFloat(label as string) === 0\n      ))\n\n      this.rootPosition = index === -1\n        ? 0\n        : index / (this.labels.length - 1)\n    }\n  }\n\n  public get labels(): (number | string)[] {\n    return this._labels\n  }\n\n  public set labels(labels: (number | string)[]) {\n    this._labels = labels\n    this.updateRootPosition()\n  }\n\n  public get relative(): boolean {\n    return this._relative\n  }\n\n  public set relative(relative: boolean) {\n    this._relative = relative\n    this.updateRootPosition()\n  }\n\n  public get minimum(): number {\n    const label = this.labels[0]\n    return typeof label === 'number' ? label : parseFloat(label) || 0\n  }\n\n  public get maximum(): number {\n    const label = this.labels[this.labels.length - 1]\n    if (typeof label === 'number') return label\n    const maximum = parseFloat(label)\n    return isNaN(maximum) ? this.minimum + 1 : maximum\n  }\n\n  public position(value: number): number {\n    const minimum = this.minimum\n    return ((value - minimum) / (this.maximum - minimum) - 0.5) * this.size\n  }\n\n  public generate(values: number[], {\n    labels = 4,\n    decimals = 2,\n    labelsBasedDecimals = true,\n    root = false,\n    relative = true,\n    minimumOffset = 0,\n    maximumOffset = 0\n  }: Partial<AxisGenerateParameters> = {}): void {\n    this.reset()\n\n    const minimum = Math.min(...values)\n    const maximum = Math.max(...values)\n    let shiftedMinimum = minimum - minimumOffset\n    let shiftedMaximum = maximum - maximumOffset\n\n    if (relative) {\n      this.relative = shiftedMinimum < 0 && shiftedMaximum > 0\n    }\n\n    if (this.relative) {\n      shiftedMinimum = Math.min(shiftedMinimum, -shiftedMaximum)\n      shiftedMaximum = Math.max(-shiftedMinimum, shiftedMaximum)\n      if (!(labels % 2)) labels++\n    } else if (root) {\n      shiftedMinimum = Math.min(0, shiftedMinimum)\n      shiftedMaximum = Math.max(0, shiftedMaximum)\n    }\n\n    if (decimals !== undefined) {\n      if (labelsBasedDecimals) {\n        let divider: number = 0\n\n        if (this.relative) {\n          divider = 2\n        } else {\n          for (labels; !divider; labels++) {\n            divider = smallerDividerOf(labels)\n          }\n        }\n\n        shiftedMinimum = roundStep(shiftedMinimum, decimals, divider, -1)\n        shiftedMaximum = roundStep(shiftedMaximum, decimals, divider, 1)\n      } else {\n        shiftedMinimum = floorRelative(shiftedMinimum, decimals)\n        shiftedMaximum = ceilRelative(shiftedMaximum, decimals)\n      }\n    }\n\n    const range = shiftedMaximum - shiftedMinimum\n\n    this.labels = []\n\n    for (var label = 0; label < labels; label++) {\n      this.labels.push(ceilRelative(\n        label / (labels - 1) * range + shiftedMinimum,\n        decimals\n      ))\n    }\n  }\n\n  public reset(): void {\n    this.labels.splice(0)\n    this.root = false\n    this.relative = false\n  }\n}\n","import { CSS3DObject } from 'three/examples/jsm/renderers/CSS3DRenderer'\nimport { Axis } from '~/axis'\n\nexport class Label extends CSS3DObject {\n  private readonly wrapper: HTMLDivElement = document.createElement('div')\n  private readonly content: HTMLDivElement = document.createElement('div')\n\n  public constructor() {\n    super(document.createElement('div'))\n    this.wrapper.appendChild(this.content)\n    this.element.appendChild(this.wrapper)\n  }\n\n  public get style(): CSSStyleDeclaration {\n    return this.wrapper.style\n  }\n\n  public generate(axis: Axis, value: number | string): void {\n    const rounding = (\n      axis.decimals !== undefined &&\n      Math.pow(10, axis.decimals)\n    ) as number\n\n    this.content.textContent = `${axis.prefix}${\n      rounding ? Math.round((value as number) * rounding) / rounding : value\n    }${axis.suffix}`\n  }\n\n  public resize(\n    axis: Axis,\n    opposite: Axis,\n    position: number,\n    renderingScale: number = 10\n  ): void {\n    const oppositeRelative = !!opposite.rootPosition as unknown as number\n    const rootPosition = (opposite.rootPosition - 0.5) * opposite.size\n    position = (position / (axis.labels.length - 1) - 0.5) * axis.size\n\n    const spacingX = axis.spacing.x * (\n      (oppositeRelative || !axis.orientation.x) as unknown as number\n    )\n\n    const spacingY = axis.spacing.y * (\n      (oppositeRelative || !axis.orientation.y) as unknown as number\n    )\n\n    this.content.style.transform = `translate(${\n      50 * spacingX\n    }%, ${\n      -50 * spacingY\n    }%)`\n\n    this.position\n      .setX(renderingScale * (\n        axis.orientation.x * position +\n        axis.orientation.y * rootPosition +\n        axis.margin * spacingX -\n        axis.padding * axis.orientation.y * (1 - oppositeRelative)\n      ))\n      .setY(renderingScale * (\n        axis.orientation.y * position +\n        axis.orientation.x * rootPosition +\n        axis.margin * spacingY -\n        axis.padding * axis.orientation.x * (1 - oppositeRelative)\n      ))\n      .setZ(axis.distance * renderingScale)\n  }\n}\n","import { Object3D, Camera, Scene, Matrix4 } from 'three'\nimport { CSS3DRenderer } from 'three/examples/jsm/renderers/CSS3DRenderer'\nimport { Axis } from '~/axis'\nimport { Label } from '~/label'\n\nexport interface LabelsParameters {\n  opacity: number\n  color: string\n  fontSize: number\n  fontFamily: string\n  faceCamera: boolean\n  renderingScale: number\n}\n\nexport class Labels extends Object3D implements LabelsParameters {\n  private readonly css3DRenderer = new CSS3DRenderer()\n  private readonly originalMatrix = new Matrix4()\n  private _faceCamera!: boolean\n  public readonly style = this.css3DRenderer.domElement.style\n  public fontSize: number\n  public renderingScale: number\n\n  public constructor({\n    opacity = 1,\n    color = '#ffffff',\n    fontSize = 0.3,\n    fontFamily = 'sans-serif',\n    faceCamera = false,\n    renderingScale = 100,\n  }: Partial<LabelsParameters> = {}) {\n    super()\n\n    this.opacity = opacity\n    this.color = color\n    this.fontSize = fontSize\n    this.fontFamily = fontFamily\n    this.faceCamera = faceCamera\n    this.renderingScale = renderingScale\n    this.matrixAutoUpdate = false\n\n    this.style.position = 'absolute'\n    this.style.pointerEvents = 'none'\n    this.style.top =\n    this.style.left = '0'\n    this.style.zIndex = '2'\n\n    document.body.appendChild(this.css3DRenderer.domElement)\n  }\n\n  private iterate(x: Axis, y: Axis, callback: (\n    axis: Axis,\n    opposite: Axis,\n    index: number,\n    position: number,\n    value: number | string\n  ) => void): number {\n    return [x, y].reduce((index, axis, axisIndex, axes) => {\n      return axis.labels.reduce((index: number, value, position) => {\n        callback(\n          axis,\n          axes[(axisIndex + 1) % axes.length],\n          index,\n          position,\n          value\n        )\n\n        return index + 1\n      }, index)\n    }, 0)\n  }\n\n  private scaleFont(): void {\n    this.style.fontSize = `${this.fontSize * this.renderingScale}px`\n  }\n\n  public get opacity(): number {\n    return parseFloat(this.style.opacity!)\n  }\n\n  public set opacity(opacity: number) {\n    this.style.opacity = opacity as unknown as string\n  }\n\n  public get color(): string {\n    return this.style.color!\n  }\n\n  public set color(color: string) {\n    this.style.color = color\n  }\n\n  public get fontFamily(): string {\n    return this.style.fontFamily!\n  }\n\n  public set fontFamily(fontFamily: string) {\n    this.style.fontFamily = fontFamily\n  }\n\n  public get faceCamera(): boolean {\n    return this._faceCamera\n  }\n\n  public set faceCamera(faceCamera: boolean) {\n    this._faceCamera = faceCamera\n    faceCamera || this.children.forEach(label => label.rotation.set(0, 0, 0))\n  }\n\n  public get visible(): boolean {\n    return this.style ? this.style.display !== 'none' : true\n  }\n\n  public set visible(visible: boolean) {\n    if (this.style) this.style.visibility = visible ? null : 'none'\n  }\n\n  public setRendererSize(width: number, height: number): void {\n    this.css3DRenderer.setSize(width, height)\n  }\n\n  public render(camera: Camera): void {\n    const parent = this.parent\n    const xCamera = camera.position.x\n    const yCamera = camera.position.y\n    const zCamera = camera.position.z\n\n    this.originalMatrix.copy(this.matrix)\n    this.parent = null\n\n    camera.position.multiplyScalar(this.renderingScale)\n\n    this.updateWorldMatrix(true, false)\n    parent!.updateWorldMatrix(true, false)\n    this.applyMatrix(parent!.matrixWorld)\n    this.updateWorldMatrix(false, false)\n\n    this.faceCamera && this.children.forEach(label => {\n      label.lookAt(camera.position)\n    })\n\n    this.position.multiplyScalar(this.renderingScale)\n    this.updateMatrix()\n    this.updateMatrixWorld(true)\n\n    this.css3DRenderer.render(this as unknown as Scene, camera)\n\n    camera.position.set(xCamera, yCamera, zCamera)\n\n    this.parent = parent\n    this.matrix.copy(this.originalMatrix)\n    this.matrix.decompose(this.position, this.quaternion, this.scale)\n  }\n\n  public generate(x: Axis, y: Axis): void {\n    this.scaleFont()\n\n    this.children\n      .slice(this.iterate(x, y, (axis, opposite, index, position, value) => {\n        let label = this.children[index] as Label\n        label || this.add(label = new Label())\n        label.generate(axis, value)\n        label.resize(axis, opposite, position, this.renderingScale)\n      }))\n      .forEach(label => this.remove(label))\n  }\n\n  public resize(x: Axis, y: Axis): void {\n    this.scaleFont()\n\n    this.iterate(x, y, (axis, opposite, index, position) => {\n      const label = this.children[index] as Label\n      label && label.resize(axis, opposite, position, this.renderingScale)\n    })\n  }\n}\n","import { BufferGeometry, BufferAttribute } from 'three'\nimport { Axis } from '~/axis'\n\nexport class Graduations extends BufferGeometry {\n  private graduations: number[] = []\n\n  public generate(x: Axis, y: Axis): void {\n    const indicesLength = 6 * [x, y].reduce((sum, {\n      graduations,\n      root,\n      rootPosition,\n      labels\n    }, index) => {\n      const maximum = labels.length - 1\n\n      if (!graduations) {\n        graduations = 0 + (root as unknown as number)\n      } else if (labels.length) {\n        if (graduations < 1) {\n          rootPosition *= maximum\n          let step = Math.min(maximum, Math.round(1 / graduations))\n          while (maximum % step || rootPosition % step) step--\n          graduations = Math.ceil(labels.length / step)\n        } else {\n          graduations = Math.round(graduations) * maximum + 1\n        }\n      } else {\n        graduations = Math.round(graduations)\n      }\n\n      this.graduations[index] = graduations\n\n      return sum + graduations\n    }, 0)\n\n    const indices = new Uint16Array(indicesLength)\n    let index = 0\n\n    for (var i = 0; i < indicesLength; i += 6) {\n      indices[i    ] = indices[i + 3] = index\n      indices[i + 1] = indices[i + 5] = index + 2\n      indices[i + 2] = index + 1\n      indices[i + 4] = index + 3\n\n      index += 4\n    }\n\n    this.setIndex(new BufferAttribute(indices, 1))\n    this.setAttribute('position',\n      new BufferAttribute(new Float32Array(indicesLength * 2), 3)\n    )\n\n    this.resize(x, y)\n  }\n\n  public resize(x: Axis, y: Axis): void {\n    const positionAttribute = this.getAttribute('position') as BufferAttribute\n    const vertices = positionAttribute.array as Float32Array\n\n    const xGraduations = this.graduations[0]\n    const yGraduations = this.graduations[1]\n\n    const xHalfSize = x.size / 2\n    const yHalfSize = y.size / 2\n\n    const xFactor = x.size / Math.max(1, xGraduations - 1)\n    const yFactor = y.size / Math.max(1, yGraduations - 1)\n\n    const xHalfPaddedSize = xHalfSize + y.padding\n    const yHalfPaddedSize = yHalfSize + x.padding\n\n    const xHalfLineWidth = x.lineWidth / 2\n    const yHalfLineWidth = y.lineWidth / 2\n\n    const xHalfOuterSize = xHalfPaddedSize + xHalfLineWidth\n    const yHalfOuterSize = yHalfPaddedSize + yHalfLineWidth\n\n    const xRootPosition = xGraduations === 1 ? x.rootPosition * x.size : 0\n    const yRootPosition = yGraduations === 1 ? y.rootPosition * y.size : 0\n\n    const xProgress = x.progress * 2\n    const yProgress = y.progress * 2\n\n    let index = 0\n\n    for (var i = 0; i < xGraduations; i++) {\n      const position = i * xFactor - xHalfSize + xRootPosition\n\n      vertices[index     ] = vertices[index +  9] = position - xHalfLineWidth\n      vertices[index +  3] = vertices[index +  6] = position + xHalfLineWidth\n      vertices[index +  7] = vertices[index + 10] = -yHalfOuterSize\n      vertices[index +  1] = vertices[index +  4] = -yHalfOuterSize + (\n        yHalfOuterSize * xProgress\n      )\n\n      index += 12\n    }\n\n    for (var i = 0; i < yGraduations; i++) {\n      const position = i * yFactor - yHalfSize + yRootPosition\n\n      vertices[index + 7] = vertices[index + 10] = position - yHalfLineWidth\n      vertices[index + 1] = vertices[index +  4] = position + yHalfLineWidth\n      vertices[index    ] = vertices[index +  9] = -xHalfOuterSize\n      vertices[index + 3] = vertices[index +  6] = -xHalfOuterSize + (\n        xHalfOuterSize * yProgress\n      )\n\n      index += 12\n    }\n\n    positionAttribute.needsUpdate = true\n  }\n}\n","import { Mesh, MeshBasicMaterial, Color, Vector2 } from 'three'\nimport { Axis, AxisParameters, AxisGenerateParameters } from '~/axis'\nimport { Labels, LabelsParameters } from '~/labels'\nimport { Graduations } from '~/graduations'\n\nexport class Axes extends Mesh {\n  public x: Axis\n  public y: Axis\n  public labels: Labels\n  public graduations: Graduations\n\n  public constructor({\n    x = {},\n    y = {},\n    labels = {},\n    opacity = 1,\n    color = 0xffffff,\n    generate = true\n  }: {\n    x?: Partial<AxisParameters>\n    y?: Partial<AxisParameters>\n    labels?: Partial<LabelsParameters>\n    opacity?: number\n    color?: Color | number | string\n    generate?: boolean\n  } = {}) {\n    super(new Graduations())\n\n    this.x = new Axis({ ...x,\n      orientation: new Vector2(1, 0),\n      spacing: new Vector2(1, -1)\n    })\n\n    this.y = new Axis({ ...y,\n      orientation: new Vector2(0, 1),\n      spacing: new Vector2(-1, 1)\n    })\n\n    this.graduations = this.geometry as Graduations\n    this.labels = new Labels(labels)\n    this.opacity = opacity\n    this.color.set(color as Color)\n\n    this.add(this.labels)\n\n    generate && this.generate()\n  }\n\n  public show(): void {\n    this.visible =\n    this.labels.visible = true\n  }\n\n  public hide(): void {\n    this.visible =\n    this.labels.visible = false\n  }\n\n  public toggle(toggle: boolean = !this.visible): void {\n    toggle ? this.show() : this.hide()\n  }\n\n  public get color(): Color {\n    return (this.material as MeshBasicMaterial).color\n  }\n\n  public set color(color: Color) {\n    (this.material as MeshBasicMaterial).color = color\n  }\n\n  public get opacity(): number {\n    return (this.material as MeshBasicMaterial).opacity\n  }\n\n  public set opacity(opacity: number) {\n    (this.material as MeshBasicMaterial).transparent = opacity !== 1\n    ;(this.material as MeshBasicMaterial).opacity = opacity\n  }\n\n  public generate(\n    values?: ({ x: number | string, y: number | string })[],\n    { x = {}, y = {} }: {\n      x?: Partial<AxisGenerateParameters>\n      y?: Partial<AxisGenerateParameters>\n    } = {}\n  ): void {\n    if (values) {\n      const xLabels = values.map(({ x }) => x)\n      const yLabels = values.map(({ y }) => y)\n\n      const xValues = (xLabels as string[]).map(parseFloat)\n      const yValues = (yLabels as string[]).map(parseFloat)\n\n      if (xValues.includes(NaN)) this.x.labels = xLabels\n      else this.x.generate(xValues, x)\n\n      if (yValues.includes(NaN)) this.y.labels = yLabels\n      else this.y.generate(yValues, y)\n    }\n\n    this.generateGraduations()\n    this.generateLabels()\n  }\n\n  public resize(): void {\n    this.resizeGraduations()\n    this.resizeLabels()\n  }\n\n  public generateGraduations(): void {\n    this.graduations.generate(this.x, this.y)\n  }\n\n  public resizeGraduations(): void {\n    this.graduations.resize(this.x, this.y)\n  }\n\n  public generateLabels(): void {\n    this.labels.generate(this.x, this.y)\n  }\n\n  public resizeLabels(): void {\n    this.labels.resize(this.x, this.y)\n  }\n}\n"],"names":["floorRelative","value","decimals","undefined","factor","Math","pow","floor","ceil","ceilRelative","roundStep","divider","direction","roundedValue","step","smallerDividerOf","maximum","_a","orientation","spacing","_b","size","_c","labels","_d","prefix","_e","suffix","_f","_g","graduations","_h","root","_j","relative","_k","lineWidth","_l","progress","_m","margin","_o","padding","_p","distance","this","_labels","Axis","length","index","findIndex","label","parseFloat","rootPosition","Object","updateRootPosition","_relative","isNaN","minimum","values","labelsBasedDecimals","minimumOffset","maximumOffset","reset","shiftedMinimum","min","shiftedMaximum","max","range","push","splice","_super","document","createElement","_this","wrapper","appendChild","content","element","tslib_1.__extends","Label","style","axis","rounding","textContent","round","opposite","position","renderingScale","oppositeRelative","spacingX","x","spacingY","y","transform","setX","setY","setZ","CSS3DObject","opacity","color","fontSize","fontFamily","faceCamera","CSS3DRenderer","Matrix4","css3DRenderer","domElement","matrixAutoUpdate","pointerEvents","top","left","zIndex","body","Labels","callback","reduce","axisIndex","axes","_faceCamera","children","forEach","rotation","set","display","visible","visibility","width","height","setSize","camera","parent","xCamera","yCamera","zCamera","z","originalMatrix","copy","matrix","multiplyScalar","updateWorldMatrix","applyMatrix","matrixWorld","lookAt","updateMatrix","updateMatrixWorld","render","decompose","quaternion","scale","scaleFont","slice","iterate","add","generate","resize","remove","Object3D","Graduations","indicesLength","sum","indices","Uint16Array","i","setIndex","BufferAttribute","setAttribute","Float32Array","positionAttribute","getAttribute","vertices","array","xGraduations","yGraduations","xHalfSize","yHalfSize","xFactor","yFactor","xHalfPaddedSize","yHalfPaddedSize","xHalfLineWidth","yHalfLineWidth","xHalfOuterSize","yHalfOuterSize","xRootPosition","yRootPosition","xProgress","yProgress","needsUpdate","BufferGeometry","Vector2","geometry","Axes","toggle","show","hide","material","transparent","xLabels","map","yLabels","xValues","yValues","includes","NaN","generateGraduations","generateLabels","resizeGraduations","resizeLabels","Mesh"],"mappings":"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"}